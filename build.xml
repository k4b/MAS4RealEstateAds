<project name="MAS4RealEstateAds"
         default="compile"
         xmlns:ivy="antlib:org.apache.ivy.ant">
  
  <property file="${basedir}/build.properties"/>
  
  <property name="build.dir" value="build" />
  <property name="lib.dir" value="lib" />
  <property name="src.dir" value="src" />
  <property name="classes.dir" value="${build.dir}/classes" />
  <property name="ant.dir" value="${build.dir}/ivy" />
  
  <!-- jar -->
  <property name="jar.name" value="MAS4RealEstateAds-${version}.jar" />
  
  <!-- ivy -->
  <property name="ivy.dir" value="${build.dir}/ivy" />
  <property name="ivy.version" value="2.3.0" />
  
  <condition property="agents.args" value="-agents ${agents}" else="">
    <isset property="agents"/>
  </condition>
  
  <condition property="gui.arg" value="-gui" else="">
    <and>
      <isset property="gui"/>
      <equals arg1="${gui}" arg2="true"/>
    </and>
  </condition>
  
  <path id="lib-classpath">
    <fileset dir="${lib.dir}">
      <include name="**/*.jar"/>
    </fileset>
    <pathelement location="${classes.dir}" />
  </path>
  
  <target name="clean" description="Cleans up build files">
    <delete dir="${build.dir}" />
  </target>
  
  <target name="clean-lib" description="Cleans up libraries">
    <delete dir="${basedir}/lib"/>
  </target>
  
  <target name="init">
    <mkdir dir="${build.dir}" />
  </target>
  
  <target name="init-lib">
    <mkdir dir="${lib.dir}"/>
  </target>
  
  <target name="ivy-download" depends="init-lib" unless="ivy.jar.exists">
    <mkdir dir="${basedir}/ivy/lib"/>
    <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar"
         dest="${ivy.dir}/lib/ivy-${ivy.version}.jar" 
         usetimestamp="true"/>
  </target>

  <target name="ivy-init" depends="ivy-download" unless="skip.ivy">
    <path id="ivy.lib.path">
      <fileset dir="${ivy.dir}/lib" includes="ivy-${ivy.version}.jar"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    <ivy:settings file="${ivy.dir}/ivysettings.xml"/>
  </target>
  
  <target name="ivy-report" depends="resolve" description="Generate Ivy reports">                                                        
    <ivy:report todir="${build.dir}/ivy-report"/>                                                    
  </target>
  
  <macrodef name="ivy-resolve-conf">
    <attribute name="conf"/>
    <attribute name="lib.dir"/>
    <attribute name="report.dir"/>
    <sequential>
      <echo>Resolving ivy conf: @{conf} for lib.dir: @{lib.dir} in module ${ant.project.name}</echo>
      <ivy:resolve conf="@{conf}" log="download-only"/>
      <ivy:report conf="@{conf}" todir="@{report.dir}"/>
      <ivy:retrieve conf="@{conf}" pattern="@{lib.dir}/[artifact]-[revision](-[classifier]).[ext]"/>
    </sequential>
  </macrodef>
  
  <target name="ant-download" depends="ivy-init" unless="ant-optional.exists">
    <mkdir dir="${ant.dir}"/>
    <ivy:retrieve
        organisation="org.apache.ant"
        module="ant"
        revision="1.9.2"
        pattern="${ant.dir}/[artifact]-[revision].[ext]"
        inline="true"
        conf="default"/>
    <ivy:retrieve
        organisation="ant"
        module="optional"
        revision="1.5.4"
        pattern="${ant.dir}/[artifact]-[revision].[ext]"
        inline="true"
        conf="default"/>
  </target>
  
  <target name="resolve" depends="ivy-init, ant-download" description="Retreive dependencies with ivy" unless="isresolved">
    <ivy:resolve conf="default" file="${basedir}/ivy.xml" />
    <ivy:retrieve conf="default" pattern="${lib.dir}/[artifact]-[revision].[ext]" log="default"/>
    <property name="isresolved" value="true" />
  </target>
  
  <target name="compile" depends="init" description="Compile sources">
      <mkdir dir="${classes.dir}"/>
      <javac srcdir="${src.dir}"
             source="1.7"
             target="1.7"
             encoding="UTF-8"
             destdir="${classes.dir}">
        <classpath refid="lib-classpath" />
      </javac>
    </target>
  
  <target name="run" depends="compile" description="Run Agent">
    <echo>${agents}</echo>
    <java classname="jade.Boot" fork="true">
      <arg line="${agents.args}"/>
      <arg line="${gui.arg}"/>
      <classpath refid="lib-classpath" />
    </java>
  </target>
  
  <target name="jar" depends="compile">
    <jar destfile="${connectors-api.jar}">
      <fileset dir="${classes.dir}" />
    </jar>
  </target>
  
</project>